/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormFugas.java
 *
 * Created on Nov 4, 2011, 8:12:28 AM
 *
 * @author rebonatto
 */

package Visualizacao;

import Graficos.CriaGrafico;
import Uteis.Conversoes;
import Uteis.CalendarComboBox;
import Uteis.Configuracoes;
import Uteis.FormataNumeros;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import modelo.CapturaAtual;
import modelo.Equipamento;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import persistencia.CapturaAtualDAO;
import persistencia.EquipamentoDAO;

/**
 *
 * @author rebonatto
 */
public class FormOndasArquivadas extends javax.swing.JDialog {    
    private CapturaAtualDAO capdao = new CapturaAtualDAO();
    private EquipamentoDAO eqpdao = new EquipamentoDAO();   
        
    private CapturaAtual bean = new CapturaAtual();    
    
    private DecimalFormat df =  new DecimalFormat("0.000E0");
    NumberFormat nf = NumberFormat.getInstance();
    


    Vector titulosArquivadas = new Vector();
    Vector linhasArquivadas = new Vector();
    
    /** Creates new form FormEquipamento */
    public FormOndasArquivadas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        nf.setMaximumFractionDigits(2);
        setTitle("Waveforms stored form");
        
        //preenche o combobox       
        comboEquipamento.removeAllItems();                
        for (Equipamento equip : eqpdao.lista()) {
            comboEquipamento.addItem((Equipamento) equip);            
        }
        Calendar hoje = Calendar.getInstance();
        comboDataFim.setSelectedItem(Conversoes.CalendarToString(hoje));
        comboDataIni.setSelectedItem(Conversoes.CalendarToString(hoje));
        
        montaTabelaArquivadas() ;         
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GrupoOndas = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txtEquipamento = new javax.swing.JLabel();
        jtfEquipamento = new javax.swing.JTextField();
        comboEquipamento = new javax.swing.JComboBox();
        radioData = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        comboDataIni = new CalendarComboBox();
        jLabel1 = new javax.swing.JLabel();
        comboDataFim = new CalendarComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaArquivadas = new javax.swing.JTable();
        btnCarregaOndas = new javax.swing.JButton();
        jFormaOnda = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panelHarmonicas = new javax.swing.JPanel();
        panelOnda = new javax.swing.JPanel();
        checkEquipamentos = new javax.swing.JCheckBox();
        CheckFase = new javax.swing.JCheckBox();
        CheckFuga = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(1250, 720));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEquipamento.setText("Equipment:");
        txtEquipamento.setEnabled(false);
        jPanel1.add(txtEquipamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 110, -1));

        jtfEquipamento.setEnabled(false);
        jtfEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfEquipamentoActionPerformed(evt);
            }
        });
        jtfEquipamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfEquipamentoFocusLost(evt);
            }
        });
        jPanel1.add(jtfEquipamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 62, -1));

        comboEquipamento.setEditable(true);
        comboEquipamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboEquipamento.setEnabled(false);
        comboEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEquipamentoActionPerformed(evt);
            }
        });
        jPanel1.add(comboEquipamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 234, -1));

        radioData.setText("Select Date");
        radioData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioDataActionPerformed(evt);
            }
        });
        jPanel1.add(radioData, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 10, -1, -1));

        jLabel9.setText("From:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, -1, -1));

        comboDataIni.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDataIni.setEnabled(false);
        jPanel1.add(comboDataIni, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, 124, -1));

        jLabel1.setText("To:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 10, -1, -1));

        comboDataFim.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboDataFim.setEnabled(false);
        jPanel1.add(comboDataFim, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 10, 124, -1));

        tabelaArquivadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaArquivadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaArquivadasMouseClicked(evt);
            }
        });
        tabelaArquivadas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaArquivadasKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaArquivadas);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 1220, 170));

        btnCarregaOndas.setText("Get Waveforms");
        btnCarregaOndas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarregaOndasActionPerformed(evt);
            }
        });
        jPanel1.add(btnCarregaOndas, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 270, -1, 30));

        jFormaOnda.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jFormaOnda.setText("Waveform");
        jPanel1.add(jFormaOnda, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, -1, -1));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel2.setText("DC Component and harmonics");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, -1, -1));

        panelHarmonicas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelHarmonicas.setPreferredSize(new java.awt.Dimension(240, 220));
        jPanel1.add(panelHarmonicas, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 340, 480, 370));

        panelOnda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelOnda.setPreferredSize(new java.awt.Dimension(240, 220));
        jPanel1.add(panelOnda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 480, 370));

        checkEquipamentos.setSelected(true);
        checkEquipamentos.setText("All Equipments");
        checkEquipamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkEquipamentosActionPerformed(evt);
            }
        });
        jPanel1.add(checkEquipamentos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        CheckFase.setText("Show Turn on (phase)");
        CheckFase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckFaseActionPerformed(evt);
            }
        });
        jPanel1.add(CheckFase, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 10, 210, -1));

        CheckFuga.setSelected(true);
        CheckFuga.setText("Show Diferential (Leakage)");
        CheckFuga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckFugaActionPerformed(evt);
            }
        });
        jPanel1.add(CheckFuga, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 220, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCarregaOndasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarregaOndasActionPerformed
        // TODO add your handling code here:
        atualizaTabelaArquivadas();
    }//GEN-LAST:event_btnCarregaOndasActionPerformed

    private void radioDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioDataActionPerformed
        // TODO add your handling code here:
        if (radioData.isSelected()){
            comboDataIni.setEnabled(true);
            comboDataFim.setEnabled(true);
        }
        else{
            comboDataIni.setEnabled(false);
            comboDataFim.setEnabled(false);
        }
    }//GEN-LAST:event_radioDataActionPerformed

    private void comboEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEquipamentoActionPerformed
        // TODO add your handling code here:
        Equipamento eqp = new Equipamento();
        if (comboEquipamento.getSelectedIndex() != -1) {
            eqp = (Equipamento) comboEquipamento.getSelectedItem();
            jtfEquipamento.setText(String.valueOf(eqp.getCodEquip()));
        }
    }//GEN-LAST:event_comboEquipamentoActionPerformed

    private void tabelaArquivadasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaArquivadasKeyReleased
        // TODO add your handling code here:
        if (tabelaArquivadas.getSelectedRow() != -1) {
            this.tabelaArquivadasMouseClicked(null);
        }
    }//GEN-LAST:event_tabelaArquivadasKeyReleased

    private void tabelaArquivadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaArquivadasMouseClicked
        // TODO add your handling code here:
        int linha = tabelaArquivadas.getSelectedRow();

        if (linha == -1){
            JOptionPane.showMessageDialog(null, "Leakages not found");
            return;
        }

        bean = capdao.localiza((Integer) tabelaArquivadas.getValueAt(linha, 0));

        atualizaGraficos(bean, panelOnda, panelHarmonicas, bean.getCodCaptura());
    }//GEN-LAST:event_tabelaArquivadasMouseClicked

    private void jtfEquipamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfEquipamentoFocusLost
        // TODO add your handling code here:
        if (jtfEquipamento.getText().isEmpty()){
            comboEquipamento.setSelectedIndex(-1);
            return;
        }
        int codEquipamento = Integer.parseInt(jtfEquipamento.getText());
        Equipamento eqp = eqpdao.localiza(codEquipamento);
        if (eqp == null) {
            JOptionPane.showMessageDialog(null, "Equipment not found");
            if(comboEquipamento.getSelectedIndex() != -1){
                eqp = (Equipamento) comboEquipamento.getSelectedItem();
                jtfEquipamento.setText(String.valueOf(eqp.getCodEquip()));
            }
            return;
        } else {
            comboEquipamento.setSelectedItem((Equipamento)eqp);
        }
    }//GEN-LAST:event_jtfEquipamentoFocusLost

    private void jtfEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfEquipamentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfEquipamentoActionPerformed

    private void checkEquipamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkEquipamentosActionPerformed
        // TODO add your handling code here:
        if (! checkEquipamentos.isSelected()){
            txtEquipamento.setEnabled(true);
            jtfEquipamento.setEnabled(true);
            comboEquipamento.setEnabled(true);
        }
        else{
            txtEquipamento.setEnabled(false);
            jtfEquipamento.setEnabled(false);
            comboEquipamento.setEnabled(false);            
        }
    }//GEN-LAST:event_checkEquipamentosActionPerformed

    private void CheckFugaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckFugaActionPerformed
        // TODO add your handling code here:
        if (! CheckFase.isSelected())
        if (! CheckFuga.isSelected()){
            JOptionPane.showMessageDialog(rootPane, "Must be select a waveform type at least");
            CheckFuga.setSelected(true);
        }
    }//GEN-LAST:event_CheckFugaActionPerformed

    private void CheckFaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckFaseActionPerformed
        // TODO add your handling code here:
        if (! CheckFuga.isSelected())
        if (! CheckFase.isSelected()){
            JOptionPane.showMessageDialog(rootPane, "Must be select a waveform type at least");
            CheckFase.setSelected(true);
        }
    }//GEN-LAST:event_CheckFaseActionPerformed
           
    private void atualizaGraficos (Object bean, JPanel panelOnda, JPanel panelHarmonicas, int codcaptura){
        // Monta grafico da Onda        
        
        jFormaOnda.setText("Waveform " + String.valueOf(codcaptura));
        
        final JFreeChart chart = CriaGrafico.createChartLinhas(bean, false);
        final ChartPanel crtPanelOnda = new ChartPanel(chart);
        crtPanelOnda.setPreferredSize(new java.awt.Dimension(500, 370));
        
//        crtPanelOnda.setVisible(true);
//        crtPanelOnda.setSize(panelOnda.getWidth(), panelOnda.getHeight());
        
        panelOnda.removeAll();
        panelOnda.add(crtPanelOnda);
        panelOnda.revalidate();
        panelOnda.repaint();
                        
        // monta grafico de barras
        ChartPanel crtPanelBarras = new ChartPanel(CriaGrafico.createChartBarras(bean, false, true));
        crtPanelBarras.setPreferredSize(new java.awt.Dimension(500, 370));
        
        //crtPanelBarras.setVisible(true);
        //crtPanelBarras.setSize(panelHarmonicas.getWidth(), panelHarmonicas.getHeight());
        panelHarmonicas.removeAll();
        panelHarmonicas.add(crtPanelBarras);
        panelHarmonicas.revalidate();
        panelHarmonicas.repaint();
    }

    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                FormOndasArquivadas dialog = new FormOndasArquivadas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    
    private int montaTabelaArquivadas() {
        //Ajusta titulos da tabela
        titulosArquivadas.add("Capture");        
        titulosArquivadas.add("Event type");        
        titulosArquivadas.add("Room");
        titulosArquivadas.add("Outlet");
        titulosArquivadas.add("Equipment");                
        titulosArquivadas.add("Mean value");
        titulosArquivadas.add("RMS");                        
        titulosArquivadas.add("Date");        
        
        tabelaArquivadas.setModel(new DefaultTableModel(linhasArquivadas, titulosArquivadas));
        tabelaArquivadas.setAutoCreateRowSorter(true);

        return (linhasArquivadas.size());
    }

    private void atualizaTabelaArquivadas(){
        // inicializa os dados da tabela                
        Equipamento eqp;
        linhasArquivadas.clear();
        tabelaArquivadas.removeAll();    
        
        if (! checkEquipamentos.isSelected())
            eqp = (Equipamento) comboEquipamento.getSelectedItem();                            
        else        
            eqp = null;
        
        if (radioData.isSelected()){ //Se tem selecao de data
            String  sIni = (String) comboDataIni.getSelectedItem();        
            String  sFim = (String) comboDataFim.getSelectedItem();                             
            
            for (CapturaAtual c : capdao.listacFO(eqp, Conversoes.StringToCalendar(sIni), Conversoes.StringToCalendar(sFim), CheckFase.isSelected(), CheckFuga.isSelected() ) ) 
                addTabelaArquivadas(c);            
        }
        else{
            for (CapturaAtual c : capdao.listacFO(eqp, CheckFase.isSelected(), CheckFuga.isSelected()) ) 
                addTabelaArquivadas(c);            
        }
        
        JOptionPane.showMessageDialog(panelHarmonicas, "Where added " + tabelaArquivadas.getRowCount() + " events");
 
        tabelaArquivadas.revalidate();  
        
    }    
    
    private void addTabelaArquivadas(CapturaAtual c) {
              
        Vector colunas = new Vector();

        colunas.add(c.getCodCaptura());
        colunas.add(c.getCodEvento().getCodEvento() == 1 ? "Leakage": "Phase");
        colunas.add(c.getCodTomada().getCodSala());
        colunas.add(c.getCodTomada());        
        colunas.add(c.getCodEquip());                
        
        if (c.getDataAtual().compareTo(Configuracoes.DATALIMITEVM) < 0){ // Menor que zero significa data da captura e antes de 01/01/2015
            colunas.add((int) c.getValorMedio() / Configuracoes.PONTOSONDA);
            //System.out.println("Colocou o valor dividio por 256");
        }
        else{
            colunas.add( (int) c.getValorMedio() );
            //System.out.println("Colocou o valor real");
        }
        
        colunas.add(FormataNumeros.FormataSignificativos(c.getEficaz(), Configuracoes.DIGITOSSIGNIFICATIVOS));        
        colunas.add(Conversoes.CalendarToTimeStamp(c.getDataAtual()));                        

        linhasArquivadas.add(colunas);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckFase;
    private javax.swing.JCheckBox CheckFuga;
    private javax.swing.ButtonGroup GrupoOndas;
    private javax.swing.JButton btnCarregaOndas;
    private javax.swing.JCheckBox checkEquipamentos;
    private javax.swing.JComboBox comboDataFim;
    private javax.swing.JComboBox comboDataIni;
    private javax.swing.JComboBox comboEquipamento;
    private javax.swing.JLabel jFormaOnda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jtfEquipamento;
    private javax.swing.JPanel panelHarmonicas;
    private javax.swing.JPanel panelOnda;
    private javax.swing.JCheckBox radioData;
    private javax.swing.JTable tabelaArquivadas;
    private javax.swing.JLabel txtEquipamento;
    // End of variables declaration//GEN-END:variables

}
