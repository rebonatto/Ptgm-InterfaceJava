/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Visualizacao;


import Graficos.CriaGrafico;
import Uteis.CalendarComboBox;
import Uteis.Conversoes;
import java.awt.FlowLayout;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import modelo.CapturaAtual;
import modelo.Equipamento;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import persistencia.CapturaAtualDAO;
import persistencia.EquipamentoDAO;
import persistencia.EventoDAO;

/**
 *
 * @author rebonatto
 */

public class FormFoCapturadas extends javax.swing.JDialog {
    private EquipamentoDAO eqpdao = new EquipamentoDAO();
    private EventoDAO evdao = new EventoDAO();
    private CapturaAtualDAO dao = new CapturaAtualDAO();
    private CapturaAtual bean = new CapturaAtual();
    
    Vector titulos = new Vector();
    Vector linhas = new Vector();    


    /**
     * Creates new form FormFoCapturadas
     */
    public FormFoCapturadas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        //System.out.println("Executando");
        initComponents();
                
        //preenche o combobox
        //comboEquipamento.removeAllItems();        
        for (Equipamento equip : eqpdao.lista()) {
            comboEquipamento.addItem((Equipamento) equip);
        }

        setTitle("Showing waveform stored");
        
                
        //Coloca titulos nas tabelas
        titulos.add("Code");
        titulos.add("Event");
        titulos.add("Room");
        titulos.add("Outlet");
        titulos.add("Date");
        titulos.add("Time");
        titulos.add("Mean Value");
        
        tabela.setModel(new DefaultTableModel(linhas, titulos));
        
        jLabel4.setVisible(false);
        jLabel5.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jtfEquipamento = new javax.swing.JTextField();
        comboEquipamento = new javax.swing.JComboBox();
        btnLimparFiltro = new javax.swing.JButton();
        btnFiltrar1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        panelHarmonicas = new javax.swing.JPanel();
        panelOnda = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtfOnda = new javax.swing.JTextField();
        btnMostraOnda = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Equipment:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 110, -1));

        jtfEquipamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfEquipamentoFocusLost(evt);
            }
        });
        getContentPane().add(jtfEquipamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 62, -1));

        comboEquipamento.setEditable(true);
        comboEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEquipamentoActionPerformed(evt);
            }
        });
        getContentPane().add(comboEquipamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 234, -1));

        btnLimparFiltro.setText("Clean Filter");
        btnLimparFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparFiltroActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimparFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, 130, -1));

        btnFiltrar1.setText("Equipement Filter");
        btnFiltrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrar1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnFiltrar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 160, -1));

        jLabel1.setText("Formas de Onda");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, -1, -1));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        tabela.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabelaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabela);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 880, 100));

        panelHarmonicas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelHarmonicas.setPreferredSize(new java.awt.Dimension(240, 220));
        getContentPane().add(panelHarmonicas, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 260, 480, 370));

        panelOnda.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        panelOnda.setPreferredSize(new java.awt.Dimension(240, 220));
        getContentPane().add(panelOnda, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 480, 370));

        jLabel4.setText("esp");
        jLabel4.setEnabled(false);
        jLabel4.setFocusable(false);
        jLabel4.setRequestFocusEnabled(false);
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 410, -1, -1));

        jLabel5.setText("espaco");
        jLabel5.setEnabled(false);
        jLabel5.setFocusable(false);
        jLabel5.setRequestFocusEnabled(false);
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 630, -1, 20));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel2.setText("DC component and Harmonics");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 220, -1, -1));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jLabel6.setText("Waveform");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 220, -1, -1));

        jLabel7.setText("Onda:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 30, -1, -1));

        jtfOnda.setText("5273263");
        jtfOnda.setToolTipText("");
        getContentPane().add(jtfOnda, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 30, 90, -1));

        btnMostraOnda.setText("Show");
        btnMostraOnda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostraOndaActionPerformed(evt);
            }
        });
        getContentPane().add(btnMostraOnda, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 30, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfEquipamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfEquipamentoFocusLost
        // TODO add your handling code here:
        if (jtfEquipamento.getText().isEmpty()){
            comboEquipamento.setSelectedIndex(-1);
            return;
        }
        int codEquipamento = Integer.parseInt(jtfEquipamento.getText());
        Equipamento eqp = eqpdao.localiza(codEquipamento);
        if (eqp == null) {
            JOptionPane.showMessageDialog(null, "Equipment not found");
            if(comboEquipamento.getSelectedIndex() != -1){
                eqp = (Equipamento) comboEquipamento.getSelectedItem();
                jtfEquipamento.setText(String.valueOf(eqp.getCodEquip()));
            }
            return;
        } else {
            comboEquipamento.setSelectedItem((Equipamento) eqp);            
        }   
        montaTabela(eqp);
    }//GEN-LAST:event_jtfEquipamentoFocusLost

    private void comboEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEquipamentoActionPerformed
        // TODO add your handing code here:

        Equipamento eqp = new Equipamento();
        if (comboEquipamento.getSelectedIndex() != -1) {
            eqp = (Equipamento) comboEquipamento.getSelectedItem();
            jtfEquipamento.setText(String.valueOf(eqp.getCodEquip()));
        }        
        montaTabela(eqp);
    }//GEN-LAST:event_comboEquipamentoActionPerformed

    private void montaTabela(Equipamento eqp){
        clearTabela();
        int i = 0;        
        for (CapturaAtual coa : dao.listacFO(eqp)){
            addTabela(coa);
            i++;
        }
        //JOptionPane.showMessageDialog(null, "Foram inseridos " + String.valueOf(i) + " eventos");
        tabela.revalidate();               
    }
    
    private void addTabela(CapturaAtual o) {
        Vector colunas = new Vector();

        colunas.add(o.getCodCaptura() );
        colunas.add(o.getCodEvento());
        colunas.add(o.getCodTomada().getCodSala());
        colunas.add(o.getCodTomada());
        colunas.add(Conversoes.CalendarToString(o.getDataAtual()));
        colunas.add(Conversoes.CalendarToTime(o.getDataAtual()));
       // colunas.add(o.getValorMedio());
        colunas.add(o.getEficaz());

        linhas.add(colunas);
    }
    
    private void clearTabela(){                      
        linhas.clear();
        tabela.revalidate();        
    }
        
    private void btnLimparFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparFiltroActionPerformed
        // TODO add your handling code here:
        comboEquipamento.removeAllItems();
        for (Equipamento equip : eqpdao.lista()) {
                comboEquipamento.addItem((Equipamento) equip);
        }        
    }//GEN-LAST:event_btnLimparFiltroActionPerformed

    private void btnFiltrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrar1ActionPerformed
        // TODO add your handling code here:    
        
        FormFiltroEquip.ObjFiltroEquip obj = FormFiltroEquip.abreFormulario();        
        
        if ( (obj.isSelTipo()) || obj.isSelMarca() || obj.isSelModelo()){
            comboEquipamento.removeAllItems();
            if (! obj.isSelTipo())
                obj.setCodTipo(null);
            if (! obj.isSelMarca())
                obj.setCodMarca(null);
            if (! obj.isSelModelo())
                obj.setCodModelo(null);
            
            for (Equipamento equip : eqpdao.lista(obj.getCodTipo(), obj.getCodMarca(), obj.getCodModelo())) {
                comboEquipamento.addItem((Equipamento) equip);
            }
        }                        
    }//GEN-LAST:event_btnFiltrar1ActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        // TODO add your handling code here:
         // TODO add your handling code here:
        int linha = tabela.getSelectedRow();
        int coluna = 0;
        if (linha == -1){
            JOptionPane.showMessageDialog(null, "Equipment without waveform stored");
            return;
        }
        bean = dao.localiza((Integer) tabela.getValueAt(linha, coluna++));
        
        atualizaGraficos(bean);
    }//GEN-LAST:event_tabelaMouseClicked

    
    private void atualizaGraficos (CapturaAtual bean){
        // Monta grafico da Onda        
        final JFreeChart chart = CriaGrafico.createChartLinhas(bean, false);
        final ChartPanel crtPanelOnda = new ChartPanel(chart);
        crtPanelOnda.setPreferredSize(new java.awt.Dimension(500, 370));
        
//        crtPanelOnda.setVisible(true);
//        crtPanelOnda.setSize(panelOnda.getWidth(), panelOnda.getHeight());
        
        panelOnda.removeAll();
        panelOnda.add(crtPanelOnda);
        panelOnda.revalidate();
        panelOnda.repaint();
                        
        // monta grafico de barras
        ChartPanel crtPanelBarras = new ChartPanel(CriaGrafico.createChartBarras(bean, false, true));
        crtPanelBarras.setPreferredSize(new java.awt.Dimension(500, 370));
        
        //crtPanelBarras.setVisible(true);
        //crtPanelBarras.setSize(panelHarmonicas.getWidth(), panelHarmonicas.getHeight());
        panelHarmonicas.removeAll();
        panelHarmonicas.add(crtPanelBarras);
        panelHarmonicas.revalidate();
        panelHarmonicas.repaint();
    }
    
    private void tabelaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabelaKeyReleased
        // TODO add your handling code here:
        if (tabela.getSelectedRow() != -1) {         
            this.tabelaMouseClicked(null);
        }
    }//GEN-LAST:event_tabelaKeyReleased

    private void btnMostraOndaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostraOndaActionPerformed
        // TODO add your handling code here:
        CapturaAtual bean = dao.localiza(Integer.parseInt(jtfOnda.getText()));
        
        final JFreeChart chart = CriaGrafico.createChartLinhas(bean, false);
        final ChartPanel crtPanelOnda = new ChartPanel(chart);
        crtPanelOnda.setPreferredSize(new java.awt.Dimension(500, 370));
        
//        crtPanelOnda.setVisible(true);
//        crtPanelOnda.setSize(panelOnda.getWidth(), panelOnda.getHeight());
        
        panelOnda.removeAll();
        panelOnda.add(crtPanelOnda);
        panelOnda.revalidate();
        panelOnda.repaint();
                        
        // monta grafico de barras
        ChartPanel crtPanelBarras = new ChartPanel(CriaGrafico.createChartBarras(bean, false, true));
        crtPanelBarras.setPreferredSize(new java.awt.Dimension(500, 370));
        
        //crtPanelBarras.setVisible(true);
        //crtPanelBarras.setSize(panelHarmonicas.getWidth(), panelHarmonicas.getHeight());
        panelHarmonicas.removeAll();
        panelHarmonicas.add(crtPanelBarras);
        panelHarmonicas.revalidate();
        panelHarmonicas.repaint();
    }//GEN-LAST:event_btnMostraOndaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormFoCapturadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormFoCapturadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormFoCapturadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormFoCapturadas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormFoCapturadas dialog = new FormFoCapturadas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltrar1;
    private javax.swing.JButton btnLimparFiltro;
    private javax.swing.JButton btnMostraOnda;
    private javax.swing.JComboBox comboEquipamento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jtfEquipamento;
    private javax.swing.JTextField jtfOnda;
    private javax.swing.JPanel panelHarmonicas;
    private javax.swing.JPanel panelOnda;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables

/*
class filtroEquipamentos extends JFrame{
    private JTextField texto;
    private JButton botao;
    private JButton sair;
    private int flag = 0;
    
    public filtroEquipamentos(){
        super("Selecione os Filtros a Aplicar");
        setLayout(new FlowLayout() ) ;
        
        texto = new JTextField("Teste");
        add ( texto );

        sair = new JButton("Clique");
        add (sair);
        
        botao = new JButton("Clique");
        add (botao);
       
        botao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoActionPerformed(evt);
            }
        });                                
        
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        }); 
    }
    
    public int executa(){
        this.setSize(325, 100);
        this.setVisible(true); 
        return flag;
    }
    
    private void botaoActionPerformed(java.awt.event.ActionEvent evt) { 
        flag = 1;
    }
    
    private int sairActionPerformed(java.awt.event.ActionEvent evt) { 
        this.setVisible(false);
        return flag;
    }
}
*/
}
