/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Visualizacao;

import Visualizacao.Cadastros.FormModelo;
import Visualizacao.Cadastros.FormMarca;
import Visualizacao.Cadastros.FormTipo;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import modelo.Marca;
import modelo.Modelo;
import modelo.Tipo;
import persistencia.MarcaDAO;
import persistencia.ModeloDAO;
import persistencia.TipoDAO;

/**
 *
 * @author rebonatto
 */

public class FormFiltroEquip extends javax.swing.JDialog {
    private MarcaDAO mcadao = new MarcaDAO();
    private ModeloDAO mdldao = new ModeloDAO();
    private TipoDAO tpdao = new TipoDAO();
    private ObjFiltroEquip objReturn = new ObjFiltroEquip();
    
    /**
     * Creates new form FormFiltroEquip
     */
    public FormFiltroEquip(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
         //preenche o combobox
        comboMarca.removeAllItems();
        for (Marca mca : mcadao.lista()) {
            comboMarca.addItem((Marca) mca);
        }

        comboModelo.removeAllItems();
        for (Modelo mdl : mdldao.lista()) {
            comboModelo.addItem((Modelo) mdl);
        }

        comboTipo.removeAllItems();
        for (Tipo tp : tpdao.lista()) {
            comboTipo.addItem((Tipo) tp);
        }

        setTitle("Equipmento Filter");
       // objReturn = new ObjFiltroEquip();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jtfMarca = new javax.swing.JTextField();
        comboMarca = new javax.swing.JComboBox();
        btnMarca = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jtfModelo = new javax.swing.JTextField();
        comboModelo = new javax.swing.JComboBox();
        btnModelo = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jtfTipo = new javax.swing.JTextField();
        comboTipo = new javax.swing.JComboBox();
        btnTipo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        chkTipo = new javax.swing.JCheckBox();
        chkMarca = new javax.swing.JCheckBox();
        chkModelo = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Brand:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 70, -1));

        jtfMarca.setEditable(false);
        jtfMarca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfMarcaFocusLost(evt);
            }
        });
        getContentPane().add(jtfMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 62, -1));

        comboMarca.setEditable(true);
        comboMarca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboMarca.setEnabled(false);
        comboMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMarcaActionPerformed(evt);
            }
        });
        getContentPane().add(comboMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, 234, -1));

        btnMarca.setText("Marca");
        btnMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMarcaActionPerformed(evt);
            }
        });
        getContentPane().add(btnMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, -1, -1));

        jLabel9.setText("Model:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 70, -1));

        jtfModelo.setEditable(false);
        jtfModelo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfModeloFocusLost(evt);
            }
        });
        getContentPane().add(jtfModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 62, -1));

        comboModelo.setEditable(true);
        comboModelo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboModelo.setEnabled(false);
        comboModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboModeloActionPerformed(evt);
            }
        });
        getContentPane().add(comboModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, 234, -1));

        btnModelo.setText("Modelo");
        btnModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModeloActionPerformed(evt);
            }
        });
        getContentPane().add(btnModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, -1, -1));

        jLabel10.setText("Type:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 70, -1));

        jtfTipo.setEditable(false);
        jtfTipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfTipoFocusLost(evt);
            }
        });
        getContentPane().add(jtfTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 62, -1));

        comboTipo.setEditable(true);
        comboTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboTipo.setEnabled(false);
        comboTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoActionPerformed(evt);
            }
        });
        getContentPane().add(comboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 234, -1));

        btnTipo.setText("Tipo");
        btnTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTipoActionPerformed(evt);
            }
        });
        getContentPane().add(btnTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, -1, -1));

        btnSalvar.setText("   Ok   ");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, -1, -1));

        chkTipo.setSelected(true);
        chkTipo.setText("All Types");
        chkTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTipoActionPerformed(evt);
            }
        });
        getContentPane().add(chkTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        chkMarca.setSelected(true);
        chkMarca.setText("All Brands");
        chkMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMarcaActionPerformed(evt);
            }
        });
        getContentPane().add(chkMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, -1, -1));

        chkModelo.setSelected(true);
        chkModelo.setText("Todos os Modelos");
        chkModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkModeloActionPerformed(evt);
            }
        });
        getContentPane().add(chkModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, -1, -1));

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfMarcaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfMarcaFocusLost
        // TODO add your handling code here:
        if (jtfMarca.getText().isEmpty()){
            comboMarca.setSelectedIndex(-1);
            return;
        }
        int codMarca = Integer.parseInt(jtfMarca.getText());
        Marca mca = mcadao.localiza(codMarca);
        if (mca == null) {
            JOptionPane.showMessageDialog(null, "Brand not found");
            if(comboMarca.getSelectedIndex() != -1){
                mca = (Marca) comboMarca.getSelectedItem();
                jtfMarca.setText(String.valueOf(mca.getCodMarca()));
            }
            return;
        } else {
            comboMarca.setSelectedItem((Marca) mca);
        }
    }//GEN-LAST:event_jtfMarcaFocusLost

    private void comboMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMarcaActionPerformed
        // TODO add your handing code here:
        if (comboMarca.getSelectedIndex() != -1) {
            Marca mca = (Marca) comboMarca.getSelectedItem();
            jtfMarca.setText(String.valueOf(mca.getCodMarca()));
        }
    }//GEN-LAST:event_comboMarcaActionPerformed

    private void btnMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMarcaActionPerformed
        // TODO add your handling code here:
        FormMarca painel = new FormMarca(new JFrame(), true);
        painel.setVisible(true);
        comboMarca.removeAllItems();
        for (Marca mca : mcadao.lista()) {
            comboMarca.addItem(mca);
        }
    }//GEN-LAST:event_btnMarcaActionPerformed

    private void jtfModeloFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfModeloFocusLost
        // TODO add your handling code here:
        if (jtfModelo.getText().isEmpty()){
            comboModelo.setSelectedIndex(-1);
            return;
        }
        int codModelo = Integer.parseInt(jtfModelo.getText());
        Modelo mdl = mdldao.localiza(codModelo);
        if (mdl == null) {
            JOptionPane.showMessageDialog(null, "Model not found");
            if(comboModelo.getSelectedIndex() != -1){
                mdl = (Modelo) comboModelo.getSelectedItem();
                jtfMarca.setText(String.valueOf(mdl.getCodModelo()));
            }
            return;
        } else {
            comboModelo.setSelectedItem((Modelo) mdl);
        }
    }//GEN-LAST:event_jtfModeloFocusLost

    private void comboModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboModeloActionPerformed
        // TODO add your handling code here:
        if (comboModelo.getSelectedIndex() != -1) {
            Modelo mdl = (Modelo) comboModelo.getSelectedItem();
            jtfModelo.setText(String.valueOf(mdl.getCodModelo()));
        }

    }//GEN-LAST:event_comboModeloActionPerformed

    private void btnModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModeloActionPerformed
        // TODO add your handling code here:
        FormModelo painel = new FormModelo(new JFrame(), true);
        painel.setVisible(true);
        comboModelo.removeAllItems();
        for (Modelo mdl : mdldao.lista()) {
            comboModelo.addItem(mdl);
        }
    }//GEN-LAST:event_btnModeloActionPerformed

    private void jtfTipoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfTipoFocusLost
        // TODO add your handling code here:
        if (jtfTipo.getText().isEmpty()){
            comboTipo.setSelectedIndex(-1);
            return;
        }
        int codTipo = Integer.parseInt(jtfTipo.getText());
        Tipo tp = tpdao.localiza(codTipo);
        if (tp == null) {
            JOptionPane.showMessageDialog(null, "Type not found");
            if(comboTipo.getSelectedIndex() != -1){
                tp = (Tipo) comboTipo.getSelectedItem();
                jtfTipo.setText(String.valueOf(tp.getCodTipo()));
            }
            return;
        } else {
            comboTipo.setSelectedItem((Tipo) tp);
        }

    }//GEN-LAST:event_jtfTipoFocusLost

    private void comboTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoActionPerformed
        // TODO add your handling code here:
        if (comboTipo.getSelectedIndex() != -1) {
            Tipo tp = (Tipo) comboTipo.getSelectedItem();
            jtfTipo.setText(String.valueOf(tp.getCodTipo()));
        }
    }//GEN-LAST:event_comboTipoActionPerformed

    private void btnTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTipoActionPerformed
        // TODO add your handling code here:
        FormTipo painel = new FormTipo(new JFrame(), true);
        painel.setVisible(true);
        comboTipo.removeAllItems();
        for (Tipo tp : tpdao.lista()) {
            comboModelo.addItem(tp);
        }
    }//GEN-LAST:event_btnTipoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        boolean sai = true;
        if (comboMarca.getSelectedItem() == null){
            JOptionPane.showMessageDialog(null, "A Brand must be selected" ,
                    "Equipments Records", JOptionPane.OK_OPTION);
            sai = false;
            comboMarca.requestFocus();
        }
        else
            objReturn.setCodMarca((Marca) comboMarca.getSelectedItem());
                    
        if (comboModelo.getSelectedItem() == null){
            JOptionPane.showMessageDialog(null, "A Model must be selected" ,
                    "Equipments Records", JOptionPane.OK_OPTION);
            sai = false;
            comboModelo.requestFocus();
        }
        else
            objReturn.setCodModelo((Modelo) comboModelo.getSelectedItem());


        if (comboTipo.getSelectedItem() == null){
            JOptionPane.showMessageDialog(null, "A type must be selected" ,
                    "Equipments Records", JOptionPane.OK_OPTION);
            sai = false;
            comboTipo.requestFocus();
      }
      else
            objReturn.setCodTipo((Tipo) comboTipo.getSelectedItem());

        
        if (sai)
            dispose();       
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void chkTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTipoActionPerformed
        // TODO add your handling code here:
        
        if (chkTipo.isSelected()){
            jtfTipo.setEditable(false);
            comboTipo.setEnabled(false);  
            objReturn.setSelTipo(false);
        }
        else{
            jtfTipo.setEditable(true);
            comboTipo.setEnabled(true);                        
            objReturn.setSelTipo(true);
        }

    }//GEN-LAST:event_chkTipoActionPerformed

    private void chkMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMarcaActionPerformed
        // TODO add your handling code here:
       if (chkMarca.isSelected()){
            jtfMarca.setEditable(false);
            comboMarca.setEnabled(false);  
            objReturn.setSelMarca(false);
        }
        else{
            jtfMarca.setEditable(true);
            comboMarca.setEnabled(true);                        
            objReturn.setSelMarca(true);
        }

    }//GEN-LAST:event_chkMarcaActionPerformed

    private void chkModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkModeloActionPerformed
        // TODO add your handling code here:
        
        if (chkModelo.isSelected()){
            jtfModelo.setEditable(false);
            comboModelo.setEnabled(false);  
            objReturn.setSelModelo(false);
        }
        else{
            jtfMarca.setEditable(true);
            comboModelo.setEnabled(true);                        
            objReturn.setSelModelo(true);
        }
    }//GEN-LAST:event_chkModeloActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormFiltroEquip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormFiltroEquip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormFiltroEquip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormFiltroEquip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormFiltroEquip dialog = new FormFiltroEquip(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public static ObjFiltroEquip abreFormulario() {  
        FormFiltroEquip dialog = new FormFiltroEquip(new javax.swing.JFrame(), true);  
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);  
        /* Seta o JDialog como modal*/  
        dialog.setModal(true);  
        dialog.setVisible(true);                  
        
        return dialog.objReturn;  
    } 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMarca;
    private javax.swing.JButton btnModelo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnTipo;
    private javax.swing.JCheckBox chkMarca;
    private javax.swing.JCheckBox chkModelo;
    private javax.swing.JCheckBox chkTipo;
    private javax.swing.JComboBox comboMarca;
    private javax.swing.JComboBox comboModelo;
    private javax.swing.JComboBox comboTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jtfMarca;
    private javax.swing.JTextField jtfModelo;
    private javax.swing.JTextField jtfTipo;
    // End of variables declaration//GEN-END:variables

class ObjFiltroEquip{
    private boolean selTipo;
    private boolean  selMarca;
    private boolean  selModelo;
    private Tipo codTipo;
    private Marca codMarca;
    private Modelo codModelo;

//    public ObjFiltroEquip() {
//
//    }
        
    public Tipo getCodTipo() {
        return codTipo;
    }

    public void setCodTipo(Tipo codTipo) {
        this.codTipo = codTipo;
    }

    public Marca getCodMarca() {
        return codMarca;
    }

    public void setCodMarca(Marca codMarca) {
        this.codMarca = codMarca;
    }

    public Modelo getCodModelo() {
        return codModelo;
    }

    public void setCodModelo(Modelo codModelo) {
        this.codModelo = codModelo;
    }      

    public boolean isSelTipo() {
        return selTipo;
    }

    public void setSelTipo(boolean selTipo) {
        this.selTipo = selTipo;
    }

    public boolean isSelMarca() {
        return selMarca;
    }

    public void setSelMarca(boolean selMarca) {
        this.selMarca = selMarca;
    }

    public boolean isSelModelo() {
        return selModelo;
    }

    public void setSelModelo(boolean selModelo) {
        this.selModelo = selModelo;
    }
        
}

}
